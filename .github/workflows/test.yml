name: Test

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]

permissions:
  contents: read
  checks: write
  pull-requests: write

jobs:
  test:
    runs-on: ubuntu-24.04
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/apt-deps
          key: ${{ runner.os }}-deps-${{ hashFiles('.github/workflows/test.yml') }}-v1
          restore-keys: |
            ${{ runner.os }}-deps-
      
      - name: Set up permissions
        run: |
          chmod +x bin/log_json bin/version.sh
          chmod +x test/run_tests.sh

      - name: Install dependencies
        run: |
          # Create cache directory
          mkdir -p ~/.cache/apt-deps
          
          # Check what's already available
          echo "Checking pre-installed tools..."
          jq --version 2>/dev/null && echo "jq: ✓ available" || echo "jq: ✗ missing"
          bats --version 2>/dev/null && echo "bats: ✓ available" || echo "bats: ✗ missing"
          
          # Check if we have cached installation marker
          if [ -f ~/.cache/apt-deps/installed ]; then
            echo "Dependencies were previously installed from cache"
          fi
          
          # Install only what's needed
          if ! command -v jq &> /dev/null || ! command -v bats &> /dev/null; then
            echo "Installing missing dependencies..."
            sudo apt-get update
            sudo apt-get install -y bats jq
            # Mark as installed in cache
            touch ~/.cache/apt-deps/installed
            echo "Dependencies installed and cached"
          else
            echo "All dependencies already available, skipping installation"
          fi

      - name: Run tests
        run: ./test/run_tests.sh
      
      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: always() && !github.event.pull_request.draft
        with:
          files: "test-results.xml"
          report_individual_runs: true
          check_name: "Test Results"
          comment_mode: always
